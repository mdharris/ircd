serverinfo {
        name = "irc2014.ircasc.org";
        sid = "001";
        description = "a chat server";
        network_name = "IRCASC";
        network_desc = "IRC Autonomous Server Collective (www.ircasc.org)";
        hub = no;
        max_clients = 256;
        rsa_private_key_file = "/home/username/etc/irc.key";
        ssl_certificate_file = "/home/username/etc/irc.crt";
        ssl_server_protocol = sslv3, tlsv1;
};

admin {
        name = "a chat server";
        description = "IRC management team";
        email = "<admin@somedomain.pl>";
};

log {
        use_logging = no;
        fname_userlog = "logs/userlog";
        fname_operlog = "logs/operlog";
        fname_killlog = "logs/kill";
        fname_klinelog = "logs/kline";
        fname_glinelog = "logs/gline";
        log_level = L_NOTICE;
};

class {
        name = "Uluser";
        ping_time = 120 seconds;
        number_per_ip = 3;
        max_local = 4;
        max_global = 10;
        max_number = 250;
        cidr_bitlen_ipv4 = 24;
        cidr_bitlen_ipv6 = 120;
        number_per_cidr = 32;
        sendq = 16 kbytes;
};

class {
        name = "Uoper";
        ping_time = 60 seconds;
        number_per_ip = 10;
        max_number = 10;
        sendq = 256 kbytes;
};

class {
        name = "Shub";
        ping_time = 60 seconds;
        ping_warning = 15 seconds;
        connectfreq = 1 minute;
        max_number = 4;
        sendq = 512 kbytes;
};

class {
        name = "Sleaf";
        ping_time = 60 seconds;
        ping_warning = 15 seconds;
        connectfreq = 1 minute;
        max_number = 16;
        sendq = 64 kbytes;
};

class {
        name = "Sfleaf";
        ping_time = 60 seconds;
        ping_warning = 30 seconds;
        connectfreq = 5 minutes;
        max_number = 4;
        sendq = 256 kbytes;
};

auth {
        user = "*";
        class = "Uluser";
        /*
         * need_password: don't allow users who haven't supplied the correct
         *                password to connect using another auth{} block
         *                ('&' prefix on /stats I if disabled)
         * need_ident:    require the user to have identd to connect ('+' prefix on /stats I)
         * spoof_notice:  enable spoofing notification to admins
         * exceed_limit:  allow a user to exceed class limits ('>' prefix on /stats I)
         * kline_exempt:  exempt this user from k/glines ('^' prefix on /stats I)
         * gline_exempt:  exempt this user from glines ('_' prefix on /stats I)
         * resv_exempt:   exempt this user from resvs ('$' prefix on /stats I)
         * no_tilde:      remove ~ from a user with no ident ('-' prefix on /stats I)
         * can_flood:     allow this user to exceed flood limits ('|' prefix on /stats I)
         * can_idle:      exempt this user from idle restrictions ('<' prefix on /stats I)
         */
        flags = no_tilde;
};

listen {
        port = 6667;
        flags = ssl;
        port = 6668, 6669;
        flags = server;
        port = 6666;
};

shared {
        name = "root.ircasc.org";
        type = all;
};

connect {
        name = "irc.somedomain.kz";
        host = "46.255.255.255";
        rsa_public_key_file = "/home/username/etc/somedomainkz.pub";
        port = 6666;
        class = "Sleaf";
        flags = cryptlink, burst_away, topicburst;
        cipher_preference = "AES/128";
};

operator {
        name = "admin";
        user = "*@*";
        password = "encrypted password";
        encrypted = yes;
        class = "Uoper";
        umodes = locops, servnotice, external, skill, full, bots, operwall, wallop;
        flags = admin, rehash, global_kill, remote, remoteban, kline, unkline, gline, xline, nick_changes, operwall;
};

operator {
        name = "oper";
        user = "*@*";
        password = "encrypted password";
        encrypted = yes;
        class = "Uoper";
        umodes = locops, servnotice, external, skill, full, bots, operwall, wallop;
        flags = kline, unkline, gline, xline, nick_changes, operwall;
};

resv {
        reason = "Denied.";
        nick = "nickserv";
        nick = "chanserv";
        nick = "memoserv";
        nick = "helpserv";
        nick = "root";
        nick = "IRCASC";
};

channel {
        disable_fake_channels = no;
        restrict_channels = no;
        disable_local_channels = yes;
        use_invex = yes;
        use_except = yes;
        use_knock = yes;
        knock_delay = 5 minutes;
        knock_delay_channel = 1 minute;
        burst_topicwho = yes;
        max_chans_per_user = 25;
        quiet_on_ban = yes;
        max_bans = 50;
        join_flood_count = 20;
        join_flood_time = 25 seconds;
        default_split_user_count = 0;
        default_split_server_count = 0;
        no_create_on_split = no;
        no_join_on_split = no;
};

serverhide {
        flatten_links = no;
        links_delay = 5 minutes;
        hidden = no;
        disable_hidden = yes;
        hide_servers = no;
        hidden_name = "*.hidden.com";
        hide_server_ips = no;
};

general {
        max_watch = 60;
        gline_min_cidr = 16;
        gline_min_cidr6 = 48;
        invisible_on_connect = yes;
        burst_away = yes;
        use_whois_actually = no;
        kill_chase_time_limit = 60 seconds;
        hide_spoof_ips = yes;
        ignore_bogus_ts = no;
        disable_auth = yes;
        disable_remote_commands = no;
        tkline_expire_notices = yes;
        default_floodcount = 10;
        failed_oper_notice = yes;
        dots_in_ident = 2;
        min_nonwildcard = 4;
        min_nonwildcard_simple = 3;
        max_accept = 20;
        anti_nick_flood = yes;
        max_nick_time = 20 seconds;
        max_nick_changes = 5;
        anti_spam_exit_message_time = 5 minutes;
        ts_warn_delta = 30 seconds;
        ts_max_delta = 5 minutes;
        kline_with_reason = yes;
        kline_reason = "K-lined";
        reject_hold_time = 0;
        warn_no_nline = yes;
        stats_e_disabled = no;
        stats_o_oper_only = yes;
        stats_P_oper_only = no;
        stats_i_oper_only = yes;
        stats_k_oper_only = yes;
        caller_id_wait = 1 minute;
        opers_bypass_callerid = yes;
        pace_wait_simple = 1 second;
        pace_wait = 2 seconds;
        short_motd = no;
        ping_cookie = yes;
        no_oper_flood = yes;
        true_no_oper_flood = yes;
        oper_pass_resv = no;
        idletime = 0;
        max_targets = 4;
        client_flood = 8192 bytes;
        message_locale = "standard";
        oper_only_umodes = bots, cconn, cconn_full, debug, full, skill,
                           nchange, rej, spy, external, operwall,
                           locops, unauth, callerid, softcallerid;
        oper_umodes = locops, servnotice, external, skill, full, bots, operwall, wallop;
        servlink_path = "/home/username/bin/servlink";
        default_cipher_preference = "AES/256";

#       compression_level = 6;
        throttle_time = 10;
};

glines {
        enable = yes;
        duration = 1 hour;
        logging = reject, block;
};

modules {
        path = "/home/username/lib/ircd-hybrid/modules";
};
